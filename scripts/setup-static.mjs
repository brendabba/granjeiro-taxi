#!/usr/bin/env node
import fs from 'fs'
import path from 'path'

console.log('üîß Configurando projeto para deploy est√°tico...')

// Ler o next.config.js atual
const configPath = path.join(process.cwd(), 'next.config.js')
let configContent = fs.readFileSync(configPath, 'utf8')

// Verificar se j√° est√° configurado para est√°tico
if (configContent.includes('output: \'export\'') && !configContent.includes('// output: \'export\'')) {
	console.log('‚úÖ Projeto j√° configurado para build est√°tico')
	process.exit(0)
}

// Descomentar configura√ß√µes est√°ticas
configContent = configContent.replace(
	/  \/\/ Static export configuration \(uncomment for fully static site\)\n  \/\/ output: 'export',\n  \/\/ trailingSlash: true,\n  \/\/ images: \{\n  \/\/   unoptimized: true\n  \/\/ \},/,
	`  // Static export configuration (ENABLED)
  output: 'export',
  trailingSlash: true,
  images: {
    unoptimized: true
  },`
)

// Comentar otimiza√ß√µes de imagem que n√£o funcionam com export
configContent = configContent.replace(
	/  \/\/ Image optimization\n  images: \{[\s\S]*?\},/,
	`  // Image optimization (disabled for static export)
  // images: {
  //   formats: ['image/webp', 'image/avif'],
  //   deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
  //   imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
  //   minimumCacheTTL: 60,
  // },`
)

// Salvar nova configura√ß√£o
fs.writeFileSync(configPath, configContent)

console.log('‚úÖ Configura√ß√£o est√°tica ativada!')
console.log('üìÅ Build ser√° gerado em: out/')
console.log('üöÄ Para fazer build: npm run build')
console.log('üìù Para voltar ao modo din√¢mico: npm run setup:dynamic')
console.log('')
console.log('‚ö†Ô∏è  LIMITA√á√ïES DO MODE EST√ÅTICO:')
console.log('   - Sitemap.xml ser√° fixo (n√£o din√¢mico)')
console.log('   - Robots.txt ser√° fixo (n√£o din√¢mico)')
console.log('   - N√£o h√° API routes')
console.log('   - Formul√°rios s√≥ via Formspree/servi√ßos externos') 